<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>23年大二下硬件课设</title>
      <link href="/2023/06/20/2023-6-20-23%E7%A1%AC%E4%BB%B6%E8%AF%BE%E8%AE%BE/"/>
      <url>/2023/06/20/2023-6-20-23%E7%A1%AC%E4%BB%B6%E8%AF%BE%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="verilog代码实现模拟交通灯"><a href="#verilog代码实现模拟交通灯" class="headerlink" title="verilog代码实现模拟交通灯"></a>verilog代码实现模拟交通灯</h1><h2 id="题目要求如下"><a href="#题目要求如下" class="headerlink" title="题目要求如下"></a>题目要求如下</h2><p>模拟交通灯<br>输入信号：时钟信号clk<br>输出信号：东西向红黄绿灯信号r1、y1、g1以及南北向红黄绿灯信号r2、y2、g2<br>设计要求：<br>1、输出高电平表示相应灯点亮，低电平表示相应灯熄灭。<br>2、初始时东西向绿灯，g1输出高电平，南北向红灯，r2输出高电平。<br>3、12个时钟脉冲（可统一使用时钟脉冲的上升沿或者下降沿，下同）后，原绿灯方向变为黄灯，再3个时钟脉冲后，黄灯方向变红灯，同时原红灯方向变绿灯；随后又是12个时钟脉冲后，当前绿灯方向又变为黄灯，再过3个时钟脉冲后，黄灯方向变红灯，同时当前红灯方向又变为绿灯，如此循环往复。<br>4、绿灯变为黄灯前，绿灯必须先闪烁数次以作为提示，即第8个时钟脉冲到来后绿灯暂时熄灭，第9个时钟脉冲到来后绿灯重新点亮，第10个时钟脉冲到来后绿灯又熄灭，第11个时钟脉冲到来后绿灯又点亮，直到第12个时钟脉冲到来后绿灯才变为黄灯，此功能必须实现。<br>5、设法消除输出信号中的干扰脉冲（“毛刺”），此功能必须实现。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>在这个模拟交通灯系统中，我们需要根据输入信号：时钟信号clk输出东西向红黄绿灯信号r1、y1、g1以及南北向红黄绿灯信号r2、y2、g2。整个系统要求输出高电平表示相应灯点亮，低电平表示相应灯熄灭，并且初始状态下东西向道路为绿色，南北向道路为红色。此外，在每一个方向上车辆可以行驶的时间是有限制的，并且在不同时期会出现所谓“闪烁”等特殊情况。</p><h3 id="TLCounter模块设计"><a href="#TLCounter模块设计" class="headerlink" title="TLCounter模块设计"></a>TLCounter模块设计</h3><p>对于计数器模块,我们需要实现以下的功能需求：①能够循环计数0~27，并根据计数值更新交通信号灯状态。②在每个时间单位内，交通信号灯的状态都需要被同步更新。③交通信号灯的控制信号需要被输出到特定的IO口。<br>TLCounter模块由一个5位二进制寄存器组成，用于循环计数0~27。其中第一位最低位作为使能端口（enable），其余四位可表示16种状态，在此我们仅使用其中12种状态作为交通灯各个阶段。每当计数器的值变化时，就会触发TLDecoder模块更新输出状态。在该设计中，我们使用了简单的异或逻辑实现二进制寄存器的自加1操作。<br>具体实现代码如下：<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> TLCounter(clk,cnt);<span class="comment">//0~27 循环计数</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="keyword">output</span>[<span class="number">4</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">4</span>:<span class="number">0</span>] cnt=<span class="number">5&#x27;b00001</span>;</span><br><span class="line"><span class="keyword">assign</span> clr=~(cnt[<span class="number">0</span>]&amp;cnt[<span class="number">1</span>]&amp;(cnt[<span class="number">2</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">cnt[<span class="number">0</span>] &lt;= (~cnt[<span class="number">0</span>]);</span><br><span class="line">cnt[<span class="number">1</span>] &lt;= (cnt[<span class="number">1</span>] ^ cnt[<span class="number">0</span>]);</span><br><span class="line">cnt[<span class="number">2</span>] &lt;= (cnt[<span class="number">2</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>]));</span><br><span class="line">cnt[<span class="number">3</span>] &lt;= (cnt[<span class="number">3</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>] &amp; cnt[<span class="number">2</span>]));</span><br><span class="line">cnt[<span class="number">4</span>] &lt;= (cnt[<span class="number">4</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>] &amp; cnt[<span class="number">2</span>] &amp; cnt[<span class="number">3</span>]));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><br>在上面的代码中，我们首先定义了一个输入时钟信号（clk）、使能信号（enable）和一个用于输出计数器数值的信号（cnt）。然后，我们使用reg关键字声明了一个名为cnt的寄存器，并将其初始化为5’b00001。<br>接下来是关键的部分：在顺时针上升沿时，如果使能信号enable为高电平，则寄存器cnt的值会自动加1。具体实现方法是使用异或逻辑运算符（^）对各个二进制位进行比较和修改。通过这样的方式，我们就成功地实现了一个简单的计数器模块。</p><h3 id="TLDecoder模块设计"><a href="#TLDecoder模块设计" class="headerlink" title="TLDecoder模块设计"></a>TLDecoder模块设计</h3><p>TLDecoder模块是由一个组合电路构成，它将计数器产生的信号解码成相应的交通灯控制信号。具体实现采用了基于嵌套语句和位运算符构建的多层分支结构来判断当前处于哪种状态，并生成相应控制信号。<br>具体实现代码如下：<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> TLDecoder(cnt,light,clk);</span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="keyword">input</span>[<span class="number">4</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">output</span>[<span class="number">5</span>:<span class="number">0</span>] light;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">5</span>:<span class="number">0</span>] light=<span class="number">6&#x27;b001100</span>;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)<span class="comment">//所有的输出信号都将在时钟的上升沿同步更新，从而消除可能的毛刺</span></span><br><span class="line"><span class="keyword">begin</span> light[<span class="number">5</span>]&lt;=((cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;cnt[<span class="number">1</span>]));</span><br><span class="line">light[<span class="number">4</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]&amp;cnt[<span class="number">0</span>])|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;(~cnt[<span class="number">1</span>])));</span><br><span class="line">light[<span class="number">2</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">2</span>]&amp;(~cnt[<span class="number">1</span>])));</span><br><span class="line">light[<span class="number">1</span>]&lt;=((cnt[<span class="number">4</span>]&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">0</span>])|(cnt[<span class="number">4</span>]&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]));</span><br><span class="line">light[<span class="number">3</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">1</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>])));</span><br><span class="line">light[<span class="number">0</span>]&lt;=((cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">2</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">2</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;cnt[<span class="number">1</span>]));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><br>该模块实现了一个基于计数器值的交通信号灯控制器。在给定时钟信号的上升沿触发下，通过组合逻辑电路计算出当前计数器值所对应的红、黄、绿三种灯的状态，并将其输出到light寄存器中。具体地说，该模块包含一个5位的输入计数器值cnt和一个6位的输出灯状态light，其中light[5:0]分别对应红、黄、绿三种灯的状态。通过在不同的计数器值下控制各个灯的状态变化，从而实现了基于计数器的交通信号灯控制功能。</p><h2 id="毛刺的消除"><a href="#毛刺的消除" class="headerlink" title="毛刺的消除"></a>毛刺的消除</h2><p>在实现了基本的红绿灯代码后，发现执行的结果中存在“毛刺”现象。<br>首先，我们需要确定毛刺的来源。查阅资料，发现毛刺可能源于TLDecoder模块的always @(cnt)敏感性列表。因为当cnt发生变化时，所有的输出信号都会重新计算。这可能会导致不同信号之间的计算不同步，从而引入毛刺。为了解决这个问题，我们可以尝试使用同步的时钟信号来消除毛刺。<br>具体来说，我们可以将TLDecoder模块的输入信号添加一个时钟信号clk，然后将敏感性列表更改为posedge clk。这样，所有的输出信号都将在时钟的上升沿同步更新，从而消除可能的毛刺。不过，请注意，这将使输出信号的更新速度受到时钟频率的限制。请根据具体应用场景调整时钟频率以满足实际需求。</p><h4 id="verilog代码如下"><a href="#verilog代码如下" class="headerlink" title="verilog代码如下"></a>verilog代码如下</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> HardwareCourse(clk,r1,g1,y1,r2,y2,g2);</span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="keyword">output</span> r1,y1,g1,r2,y2,g2;</span><br><span class="line"><span class="keyword">wire</span>[<span class="number">4</span>:<span class="number">0</span>] cnt;</span><br><span class="line"></span><br><span class="line">TLCounter u1(clk,cnt);</span><br><span class="line">TLDecoder u2(cnt,&#123;r1,y1,g1,r2,y2,g2&#125;,clk);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> TLCounter(clk,cnt);<span class="comment">//0~27 循环计数</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="keyword">output</span>[<span class="number">4</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">4</span>:<span class="number">0</span>] cnt=<span class="number">5&#x27;b00001</span>;</span><br><span class="line"><span class="keyword">assign</span> clr=~(cnt[<span class="number">0</span>]&amp;cnt[<span class="number">1</span>]&amp;(cnt[<span class="number">2</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">cnt[<span class="number">0</span>] &lt;= (~cnt[<span class="number">0</span>]);</span><br><span class="line">cnt[<span class="number">1</span>] &lt;= (cnt[<span class="number">1</span>] ^ cnt[<span class="number">0</span>]);</span><br><span class="line">cnt[<span class="number">2</span>] &lt;= (cnt[<span class="number">2</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>]));</span><br><span class="line">cnt[<span class="number">3</span>] &lt;= (cnt[<span class="number">3</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>] &amp; cnt[<span class="number">2</span>]));</span><br><span class="line">cnt[<span class="number">4</span>] &lt;= (cnt[<span class="number">4</span>] ^ (cnt[<span class="number">0</span>] &amp; cnt[<span class="number">1</span>] &amp; cnt[<span class="number">2</span>] &amp; cnt[<span class="number">3</span>]));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> TLDecoder(cnt,light,clk);</span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="keyword">input</span>[<span class="number">4</span>:<span class="number">0</span>] cnt;</span><br><span class="line"><span class="keyword">output</span>[<span class="number">5</span>:<span class="number">0</span>] light;</span><br><span class="line"><span class="keyword">reg</span>[<span class="number">5</span>:<span class="number">0</span>] light=<span class="number">6&#x27;b001100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">light[<span class="number">5</span>]&lt;=((cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;cnt[<span class="number">1</span>]));</span><br><span class="line">light[<span class="number">4</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]&amp;cnt[<span class="number">0</span>])|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;(~cnt[<span class="number">1</span>])));</span><br><span class="line"><span class="comment">//light[3]&lt;=(((~cnt[4])&amp;(~cnt[3]))|((~cnt[4])&amp;(~cnt[2])&amp;(~cnt[1]))|((~cnt[4])&amp;(~cnt[2])&amp;cnt[1]&amp;(~cnt[0])));</span></span><br><span class="line">light[<span class="number">2</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">2</span>]&amp;(~cnt[<span class="number">1</span>])));</span><br><span class="line">light[<span class="number">1</span>]&lt;=((cnt[<span class="number">4</span>]&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">0</span>])|(cnt[<span class="number">4</span>]&amp;cnt[<span class="number">3</span>]&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]));</span><br><span class="line"><span class="comment">//light[0]&lt;=((cnt[4]&amp;(~cnt[3]))|(cnt[4]&amp;(~cnt[2])&amp;(~cnt[1])&amp;(~cnt[0]))|((~cnt[4])&amp;cnt[3]&amp;cnt[2])&amp;cnt[1]);</span></span><br><span class="line"></span><br><span class="line">light[<span class="number">3</span>]&lt;=(((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">1</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">2</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">2</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;(~cnt[<span class="number">3</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>])));</span><br><span class="line">light[<span class="number">0</span>]&lt;=((cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">2</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">2</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;(~cnt[<span class="number">1</span>])&amp;(~cnt[<span class="number">0</span>]))|(cnt[<span class="number">4</span>]&amp;(~cnt[<span class="number">3</span>])&amp;cnt[<span class="number">1</span>]&amp;(~cnt[<span class="number">0</span>]))|((~cnt[<span class="number">4</span>])&amp;cnt[<span class="number">3</span>]&amp;cnt[<span class="number">2</span>]&amp;cnt[<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>23/6/20 算法每日一题</title>
      <link href="/2023/06/20/2023-6-20-%E7%AE%97%E6%B3%95%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
      <url>/2023/06/20/2023-6-20-%E7%AE%97%E6%B3%95%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>题目:<a href="https://ac.nowcoder.com/acm/contest/59284/E">幼稚园的树2</a></p><p>牛牛在幼稚园做义工，幼稚园中共有 n 棵树，第 1 天中午时它们的高度分别为：ℎ1,ℎ2,…,ℎn（单位：毫米）。</p><p>每一天的晚上第 i 棵树的高度会增加 ai毫米，而牛牛的任务则是在第二天的清晨检查每一棵树的高度，若某棵树的高度超过了 k 毫米牛牛就会将它的高度修剪为 b 毫米。</p><p>牛牛想请你帮它计算一下第 m 天中午每一棵树的高度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cut</span><span class="params">(<span class="type">int</span> h,<span class="type">int</span> ch,<span class="type">int</span> ach,<span class="type">int</span> gr,<span class="type">int</span> day)</span><span class="comment">//初始高度,要修剪的高度,修剪后高度,每天生长高度,天数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cd1 = (ch-h)/gr+<span class="number">1</span>;<span class="comment">//第一轮到初始值需要的时间</span></span><br><span class="line">    <span class="keyword">if</span>(day&lt;cd1) <span class="keyword">return</span> h+gr*day;</span><br><span class="line">    <span class="keyword">else</span> day-=cd1,h=ach;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cut_r = (ch-ach)/gr+<span class="number">1</span>;<span class="comment">//修剪后要生长的高度/每天生长高度 向上取整 =&gt; 每次修剪间隔的时间</span></span><br><span class="line">    <span class="keyword">return</span> ach+gr*(day%cut_r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> n,m,k,b;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tree[N];</span><br><span class="line"><span class="type">int</span> grow[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;cut(4,10,3,2,4);//初始高度为4,长到10后修建为3,每天长2,长4天</span></span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;m&gt;&gt;k&gt;&gt;b;<span class="comment">//树数,第m天,长到k剪为b</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;tree[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;grow[i]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cout&lt;&lt;<span class="built_in">cut</span>(tree[i],k,b,grow[i],m<span class="number">-1</span>)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>23年大二下软件课设</title>
      <link href="/2023/06/20/2023-6-20-23%E8%BD%AF%E4%BB%B6%E8%AF%BE%E8%AE%BE/"/>
      <url>/2023/06/20/2023-6-20-23%E8%BD%AF%E4%BB%B6%E8%AF%BE%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="WHSubway-武汉市地铁导引系统"><a href="#WHSubway-武汉市地铁导引系统" class="headerlink" title="WHSubway 武汉市地铁导引系统"></a>WHSubway 武汉市地铁导引系统</h1><p>本系统前端基于<a href="https://blog.csdn.net/qq_42365534/article/details/129887911?spm=1001.2014.3001.5502">electron-vue3+vite</a>脚手架搭建,实现了<del>简陋</del>基础的GUI功能<br>后端用了SpringBoot,mybatis等技术<br>武汉市地铁线路截取日期为2023.5.23日</p><p><strong><em>由于electron的文件太大了,传不到github上,就用夸克网盘吧</em></strong></p><p>夸克网盘地址:<a href="https://pan.quark.cn/s/c24eb516f6c2">WHSubway 武汉市地铁引导系统</a></p><h3 id="以下是实验报告中截取的废话"><a href="#以下是实验报告中截取的废话" class="headerlink" title="以下是实验报告中截取的废话"></a><del>以下是实验报告中截取的废话</del></h3><h2 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h2><p>随着城市的快速发展，武汉市地铁系统不断扩建，已成为市民出行的重要交通方式之一。然而由于线路复杂、站点众多，乘客常常面临选择路线困难的问题。因此，如何高效地引导乘客选择最合适的路线已是一个具有挑战性的问题。<br>为了解决这个问题，武汉市地铁导引系统应运而生。该系统可以让乘客输入起始站点和目的站点，自动计算最短路线，并在路线信息中提供换乘方案，以便乘客提前规划出行路线。这不仅可以缓解乘客选择路线的困难，还能减少拥挤，优化地铁运营效率。<br>武汉市地铁导引系统使用了最新的技术，基于Electron-Vite-Vue框架实现了图形化界面，使用户操作更加友好和方便。同时，前后端分离的设计，采用MyBatis和MySQL数据库进行数据管理，采用SpringBoot的后端框架，使得系统更加易于更新和维护，也增强了系统的可靠性和稳定性。<br>武汉市地铁导引系统基于2023.5.27的武汉地铁线路，但随着地铁线路不断扩建和更新，该系统也可以通过修改后端的数据库不断完善和更新，以满足不同时间段、不同线路的乘客需求。武汉市地铁导引系统将为城市居民提供了更加便捷、快速、准确的出行选择。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h4 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h4><p>为了便于乘客使用，需要设计一个简单的图形化界面，让用户能直观的了解系统的使用方法和用途。GUI中要对用户的操作进行引导，例如选择站点的下拉菜单选项比较多，所以设计用户能直接在选项栏中进行输入以进行模糊搜索，同时需要对用户的操作进行初步的判断与纠错，以减轻后端的负担，例如，用户未输入站点就点击提交时，提示用户输入站点，而不是直接把数据提交给后端处理查询。</p><h4 id="获取最短路径"><a href="#获取最短路径" class="headerlink" title="获取最短路径"></a>获取最短路径</h4><p>获取最短路径是本系统的核心算法，为了实现最短路径的查询，使用广度优先搜索BFS算法，这样可以较快的找到经过站点最少的地铁线路。</p><h4 id="换乘判断"><a href="#换乘判断" class="headerlink" title="换乘判断"></a>换乘判断</h4><p>为了方便用户进行路线的规划，本系统需要展示换乘站点，为了实现换乘站点的查询，需要进行换乘判断，并输出将要换乘的线路。</p><h4 id="缩略地图放大"><a href="#缩略地图放大" class="headerlink" title="缩略地图放大"></a>缩略地图放大</h4><p>为了让用户在查询查询前能找到想去的站点，差查询后能对查找到的线路进行概览，需要将界面上缩略地图进行局部的放大，以便于用户方便的查看大地图。</p><p><img src="https://img-blog.csdnimg.cn/ef1f6e21aa5c43baa3ed2a09c400de29.png" alt="欢迎界面"><br><img src="https://img-blog.csdnimg.cn/ecab171b5417476db0ee3cff54b72582.jpeg" alt="线路查找示意"></p>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>王道数据结构书-线性表作业2</title>
      <link href="/2023/03/23/2023-3-23-%E7%8E%8B%E9%81%93%E7%AE%97%E6%B3%95%E9%93%BE%E8%A1%A8/"/>
      <url>/2023/03/23/2023-3-23-%E7%8E%8B%E9%81%93%E7%AE%97%E6%B3%95%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="太菜了-简单题也要看答案的思路-T-T"><a href="#太菜了-简单题也要看答案的思路-T-T" class="headerlink" title="太菜了,简单题也要看答案的思路 T T"></a>太菜了,简单题也要看答案的思路 T T</h3><div class="row">    <embed src="https://pic-bed-1wt.pages.dev/files/2022王道算法2.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王道数据结构书-线性表作业1</title>
      <link href="/2023/03/19/2023-3-19-%E7%8E%8B%E9%81%93%E7%AE%97%E6%B3%95%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
      <url>/2023/03/19/2023-3-19-%E7%8E%8B%E9%81%93%E7%AE%97%E6%B3%95%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="https://pic-bed-1wt.pages.dev/files/2022王道算法1.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《惠子，凝视》：比赛落幕，生活如旧</title>
      <link href="/2023/02/23/2023-2-23-%E3%80%8A%E6%83%A0%E5%AD%90%EF%BC%8C%E5%87%9D%E8%A7%86%E3%80%8B/"/>
      <url>/2023/02/23/2023-2-23-%E3%80%8A%E6%83%A0%E5%AD%90%EF%BC%8C%E5%87%9D%E8%A7%86%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="《惠子，凝视》：比赛落幕，生活如旧"><a href="#《惠子，凝视》：比赛落幕，生活如旧" class="headerlink" title="《惠子，凝视》：比赛落幕，生活如旧"></a>《惠子，凝视》：比赛落幕，生活如旧</h1><p>心情乱糟糟的，挑了一个之前收藏的日影来缓解一下。<br>电影的对话很少，但影调有惊艳到我，非常浓的日影味。刚开始不知道女主的情况，还纳闷为什么女主一直不说话。<br>明明只是个大学生，就这么喜欢日影，感觉有点太老成了。惠子先天失聪，会长大病，全馆也关了，最后收到大家瞩目的比赛也输了<br>惠子最强烈的情感表达，也只是因为听不到裁判的声音而错失机会的怒号。<br>无论怎样，生活仍在继续，次日黄昏，惠子依然出现在河畔跑步，在工作时指导后辈折好床单角。<br>惠子回到了酒店工作，惠子的对手回到了建筑工地，无关赛场上的胜负，一切喧嚣最终都会归于寂静。<br><img src="https://pic-bed-1wt.pages.dev/img/《惠子，凝视》.jpg" style= 'width="80%" align="left"'>  </p>]]></content>
      
      
      <categories>
          
          <category> 观影墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 日影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鼠鼠の寒假Vlog</title>
      <link href="/2023/02/19/2023-2-20-%E9%BC%A0%E9%BC%A0Vlog/"/>
      <url>/2023/02/19/2023-2-20-%E9%BC%A0%E9%BC%A0Vlog/</url>
      
        <content type="html"><![CDATA[<h3 id="鼠鼠我呀，要暑假才能再见到鼠鼠了捏"><a href="#鼠鼠我呀，要暑假才能再见到鼠鼠了捏" class="headerlink" title="鼠鼠我呀，要暑假才能再见到鼠鼠了捏"></a>鼠鼠我呀，要暑假才能再见到鼠鼠了捏</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=567231124&bvid=BV15v4y1s7VB&cid=1016043469&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><h3 id="整个活"><a href="#整个活" class="headerlink" title="整个活"></a>整个活</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=267212852&bvid=BV1HY411Y7PJ&cid=1016135232&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlog </tag>
            
            <tag> 动物朋友 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拿证！</title>
      <link href="/2023/02/17/2023-2-17-%E6%8B%BF%E8%AF%81%EF%BC%81/"/>
      <url>/2023/02/17/2023-2-17-%E6%8B%BF%E8%AF%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h3 id="拿证啦！花了一个月时间终于拿到了"><a href="#拿证啦！花了一个月时间终于拿到了" class="headerlink" title="拿证啦！花了一个月时间终于拿到了"></a>拿证啦！花了一个月时间终于拿到了</h3><p>　　练车第一天遇见的大叔，一开始就是练踩油门和挂挡，大叔看我无聊，过来教我倒车入库，他随便教了下，我还真学会了，后面也总是看见他。刚开始还以为大叔是个很闲的人，后来知道他在驾校附近的工厂工作，跟我一样想早点拿证，所以就也天天来练车。最后结果也不错，我们科目一到科目三都是一起考试的，都是一遍过。本来昨天科四还在到处找他没看见，应该以后也见不到他了吧…应该加个微信的，还有一个小姐姐，也是一起考的科二，也祝她暑假科三一把过。<br>　　没想到考驾照能直接全部一把过，如果挂了还要多花不少钱呢。<br>　　总之痛苦的学车生活结束了，暑假也不用再晒大太阳去练车了，寒假一个月拿证的flag也实现了，其实开车真的不难，而且开习惯了开那种好开的路感觉还很爽。<br>　　感谢教练，感谢一起练车的大叔！<br><img src="https://pic-bed-1wt.pages.dev/img/拿证1.png" width="50%"><br><img src="https://pic-bed-1wt.pages.dev/img/拿证2.png" width="50%"></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二学生寒假自律的一天</title>
      <link href="/2023/02/10/2023-2-11-%E8%9C%88%E8%9A%A3%E5%A4%A7%E5%AD%A6%E7%94%9F%E8%87%AA%E5%BE%8B%E7%9A%84%E4%B8%80%E5%A4%A9Vlog/"/>
      <url>/2023/02/10/2023-2-11-%E8%9C%88%E8%9A%A3%E5%A4%A7%E5%AD%A6%E7%94%9F%E8%87%AA%E5%BE%8B%E7%9A%84%E4%B8%80%E5%A4%A9Vlog/</url>
      
        <content type="html"><![CDATA[<h3 id="家访班会展示用，制作时长两时半-gt"><a href="#家访班会展示用，制作时长两时半-gt" class="headerlink" title="家访班会展示用，制作时长两时半:&gt;"></a>家访班会展示用，制作时长两时半:&gt;</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=779212716&bvid=BV1J14y1c7sJ&cid=1002396299&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vlog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科三一把过</title>
      <link href="/2023/02/10/2023-2-10-%E7%A7%91%E4%B8%89%E4%B8%80%E6%8A%8A%E8%BF%87/"/>
      <url>/2023/02/10/2023-2-10-%E7%A7%91%E4%B8%89%E4%B8%80%E6%8A%8A%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h3 id="本人于公元2023年2月2日进行的科目三-道路驾驶技能考试一次通过，特此公告！"><a href="#本人于公元2023年2月2日进行的科目三-道路驾驶技能考试一次通过，特此公告！" class="headerlink" title="本人于公元2023年2月2日进行的科目三 道路驾驶技能考试一次通过，特此公告！"></a>本人于公元2023年2月2日进行的科目三 道路驾驶技能考试一次通过，特此公告！</h3><!-- ![成绩](https://pic-bed-1wt.pages.dev/img/%E7%A7%91%E7%9B%AE%E4%B8%89.png) --><p><img src="https://pic-bed-1wt.pages.dev/img/拿证1.png" width="50%"></p>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科二一把过</title>
      <link href="/2023/02/02/2023-2-2-%E7%A7%91%E4%BA%8C%E4%B8%80%E6%8A%8A%E8%BF%87/"/>
      <url>/2023/02/02/2023-2-2-%E7%A7%91%E4%BA%8C%E4%B8%80%E6%8A%8A%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h3 id="本人于公元2023年2月2日进行的场地驾驶技能考试（科目二）一次通过，特此公告（狗头）！"><a href="#本人于公元2023年2月2日进行的场地驾驶技能考试（科目二）一次通过，特此公告（狗头）！" class="headerlink" title="本人于公元2023年2月2日进行的场地驾驶技能考试（科目二）一次通过，特此公告（狗头）！"></a>本人于公元2023年2月2日进行的场地驾驶技能考试（科目二）一次通过，特此公告（狗头）！</h3>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学MarkDown语法</title>
      <link href="/2023/01/29/2023-1-29-%E5%88%9D%E5%AD%A6md%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/01/29/2023-1-29-%E5%88%9D%E5%AD%A6md%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="初学MarkDown语法"><a href="#初学MarkDown语法" class="headerlink" title="初学MarkDown语法"></a>初学MarkDown语法</h1><p>年差不多过完了，想写写博客发现没学过md语法…</p><h2 id="学习资料："><a href="#学习资料：" class="headerlink" title="学习资料："></a>学习资料：</h2><p><a href="https://blog.csdn.net/TeFuirnever/article/details/104255022?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167500645516800213086410%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167500645516800213086410&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-104255022-null-null.142^v71^one_line,201^v4^add_ask&amp;utm_term=markdown&amp;spm=1018.2226.3001.4187">Markdown入门指南</a></p><p><a href="https://www.bilibili.com/video/BV1JA411h7Gw/?spm_id_from=333.1007.top_right_bar_window_history.content.click">参考视频：8分钟让你快速掌握Markdown</a></p><p><a href="https://www.fomal.cc/posts/2013454d.html">Markdown语法与外挂标签写法汇总</a></p><p><strong>以下是这次学习的练手</strong></p><hr><h1 id="块元素"><a href="#块元素" class="headerlink" title="==块元素=="></a>==块元素==</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="…"><a href="#…" class="headerlink" title="…"></a>…</h3><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><p>==我是高亮==</p><p><em>倾斜</em><br><strong>加粗</strong><br><strong><em>倾斜且加粗</em></strong><br><del>划掉</del><br>我是^上标^<br>我是~下标~</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>一二三四五<ul><li>上山打老虎<ul><li>老虎没打到<ul><li>打到小松鼠</li></ul></li></ul></li></ul></li></ul><ol><li>一二三四五</li><li>上山打老虎</li><li>老虎没打到</li><li>打到小松鼠</li></ol><p>明天要做的事:</p><ul><li>[ ] 吃饭</li><li>[ ] 睡觉</li><li>[x] 打豆豆</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Mon</th><th style="text-align:center">Tue</th><th style="text-align:center">Wed</th><th style="text-align:center">Thu</th><th style="text-align:center">Fri</th><th style="text-align:center">Sat</th><th style="text-align:center">Sun</th></tr></thead><tbody><tr><td style="text-align:center">上山</td><td style="text-align:center">上山</td><td style="text-align:center">上山</td><td style="text-align:center">上山</td><td style="text-align:center">上山</td><td style="text-align:center">上山</td><td style="text-align:center">上山</td></tr></tbody></table></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code>我是单行代码</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>这是一段引用</p></blockquote><h2 id="行文"><a href="#行文" class="headerlink" title="行文"></a>行文</h2><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>我是<sup><a href="#fn_脚注" id="reffn_脚注">脚注</a></sup></p><p>横线</p><hr><h1 id="行元素"><a href="#行元素" class="headerlink" title="==行元素=="></a>==行元素==</h1><p><a href="www.bilibili.com" title="一个视频网站">b站</a></p><p><a href="www.bilibili.com" title="一个视频网站">b站</a></p><p>请参考<a href="# 块元素">块元素</a></p><p>ULR:<br><a href="http://www.bilibili.com">http://www.bilibili.com</a></p><iframe src="//player.bilibili.com/player.html?aid=327623069&bvid=BV1JA411h7Gw&cid=171385214&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20岁生日随笔</title>
      <link href="/2023/01/19/2023-1-19-20%E5%B2%81%E7%94%9F%E6%97%A5%E9%9A%8F%E7%AC%94/"/>
      <url>/2023/01/19/2023-1-19-20%E5%B2%81%E7%94%9F%E6%97%A5%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h3 id="20岁生日随笔-作为网站第一篇文章补档发布"><a href="#20岁生日随笔-作为网站第一篇文章补档发布" class="headerlink" title="20岁生日随笔 作为网站第一篇文章补档发布~"></a>20岁生日随笔 作为网站第一篇文章补档发布~</h3><p>感觉还没反应过来就已经二十了<br>我从未像今年一样，决绝的彻底的想要告别我的19岁，迎接20岁。20岁真的会好吗？说实话我也不知道。只能说，答案在空中飘荡。<br>进入大学后，总是陷入周期性的焦虑，渐渐失掉了高中时高远的追求，又被无力感所裹挟，不知道未来会怎样。我开始厌倦用宏大叙事，用公共的视角看待社会，厌倦应付学校中那些不必要的形式，面对不断涌入的负面信息，我选择了逃避；我发现在时代的洪流面前，逃避和退缩也许并不可耻。与其试图改变无法改变的事，不如趁着秋日午后，爬上宿舍天台，蹲守一朵檐上的云；不如约上三两好友，去巷角的咖啡店，打扰猫咪的甜梦；安心于当下，享受每一个“非必要的瞬间”。<br>于是，我开始学着变得简单，变得不再贪婪，只愿这一生有所值得。新的一岁，我要明确地爱，直接的厌恶，真诚的喜欢，拥有站在太阳下的坦荡，大声无愧地称赞自己。祝我的朋友们，值得一切。快乐，平安，炽热或静好，努力收获回报！<br>“你且听这荒唐 春秋走来一步步，你且迷这风浪 永远二十赶朝暮，将昨日事，归欢喜处，我们都需要自渡。”</p>]]></content>
      
      
      <categories>
          
          <category> 茶余饭后 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优质转载测试</title>
      <link href="/2023/01/19/2023-1-19-%E4%BC%98%E8%B4%A8%E8%BD%AC%E8%BD%BD/"/>
      <url>/2023/01/19/2023-1-19-%E4%BC%98%E8%B4%A8%E8%BD%AC%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇优质转载"><a href="#这是第一篇优质转载" class="headerlink" title="这是第一篇优质转载"></a>这是第一篇优质转载</h2>]]></content>
      
      
      <categories>
          
          <category> 优质转载 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>知识笔记测试</title>
      <link href="/2023/01/19/2023-1-19-%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/01/19/2023-1-19-%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇知识笔记"><a href="#这是第一篇知识笔记" class="headerlink" title="这是第一篇知识笔记"></a>这是第一篇知识笔记</h2><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol>]]></content>
      
      
      <categories>
          
          <category> 知识笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法学习测试</title>
      <link href="/2023/01/19/2023-1-19-%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/01/19/2023-1-19-%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇算法学习测试"><a href="#这是第一篇算法学习测试" class="headerlink" title="这是第一篇算法学习测试"></a>这是第一篇算法学习测试</h2>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>生活日常测试</title>
      <link href="/2023/01/19/2023-1-19-%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
      <url>/2023/01/19/2023-1-19-%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="这是一篇测试"><a href="#这是一篇测试" class="headerlink" title="这是一篇测试"></a>这是一篇测试</h2>]]></content>
      
      
      <categories>
          
          <category> 生活日常 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
